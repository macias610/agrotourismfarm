@model Repository.Models.User

@{
    ViewBag.Title = "Edit";
}

@if (ViewBag.exception == true)
{
    <div class="alert alert-danger" role="alert">
        Wystąpił błąd.
    </div>
}

<head>
    @Scripts.Render("~/bundles/jquery")    
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")
    @Scripts.Render("~/bundles/jqueryval")

    <script >
        $(function () {
            $("form").submit(function () {
                var selTypeText = $('#SelectProfession option:selected').text();
                $("#Profession").val(selTypeText);
            });
        });
    </script>

</head>

<h2>Edytuj dane osobowe</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

            @Html.Partial("~/Views/Shared/_EditBaseDataPartial.cshtml",Model)


            @if (User.IsInRole("Admin") && Model.isUserEmployed)
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.HireDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @if (Model.HireDate.HasValue)
                        {
                            <input class="text-box single-line" data-val="true" data-val-date="The field HireDate must be a date." id="HireDate" name="HireDate" type="date" value=@Model.HireDate.Value.ToShortDateString() />
                        }
                        else
                        {
                            <input class="text-box single-line" data-val="true" data-val-date="The field HireDate must be a date." id="HireDate" name="HireDate" type="date" />
                        }
                            
                        @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Profession, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SelectProfession", ((ViewData["Professions"] as List<string>)).ToList().Select(item => new SelectListItem { Text = item, Value = item, Selected = item.Equals(@Model.Profession) ? true : false }).ToList(), new { id = "SelectProfession" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" name="UserSalary" id="UserSalary" value="@Model.Salary"/>
                    </div>
                </div>
            }

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-default"/>
            </div>
        </div>

        @Html.HiddenFor(model=>model.Profession)
        @Html.HiddenFor(model=>model.Salary)

}
<div>
    @Html.ActionLink("Wróć", "Index", "Home")
</div>

