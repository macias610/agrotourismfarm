@model DomainModel.Models.Reservation

@{
    ViewBag.Title = "Edit";
}


<head>
    @Scripts.Render("~/bundles/jquery")
    <script>
        $(function() {
            $("form").submit(function() {
                $("#Status").val($('select[name="SelectReservationState"]').val());
            });
        });
    </script>
</head>

@if (ViewData.ModelState.Keys.Contains(string.Empty))
{
    <div class="alert alert-danger" role="alert">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
}

<h2>Zmień status rezerwacji</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model=>model.Client.Name)
        @Html.HiddenFor(model=>model.Client.Surname)
        @Html.HiddenFor(model=>model.StartDate)
        @Html.HiddenFor(model=>model.EndDate)
        @Html.HiddenFor(model=>model.Status)
        @Html.HiddenFor(model=>model.RowVersion)

        <div class="form-group">
            @Html.LabelFor(model => model.Client.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Client.Name, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Client.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Client.Surname, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SelectReservationState", ((ViewData["States"] as List<string>)).ToList().Select(item => new SelectListItem { Text = item, Value = item, Selected = item.Equals(@Model.Status) ? true : false }).ToList(), new { id = "SelectReservationState" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Wróć", "Index")
</div>
